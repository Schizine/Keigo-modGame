// Generated by Haxe 4.1.5
#include <hxcpp.h>

#ifndef INCLUDED_Cutscene3
#include <Cutscene3.h>
#endif
#ifndef INCLUDED_DialogueBox
#include <DialogueBox.h>
#endif
#ifndef INCLUDED_EReg
#include <EReg.h>
#endif
#ifndef INCLUDED_Paths
#include <Paths.h>
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_flixel_FlxBasic
#include <flixel/FlxBasic.h>
#endif
#ifndef INCLUDED_flixel_FlxCamera
#include <flixel/FlxCamera.h>
#endif
#ifndef INCLUDED_flixel_FlxG
#include <flixel/FlxG.h>
#endif
#ifndef INCLUDED_flixel_FlxObject
#include <flixel/FlxObject.h>
#endif
#ifndef INCLUDED_flixel_FlxSprite
#include <flixel/FlxSprite.h>
#endif
#ifndef INCLUDED_flixel_group_FlxTypedSpriteGroup
#include <flixel/group/FlxTypedSpriteGroup.h>
#endif
#ifndef INCLUDED_flixel_input_FlxBaseKeyList
#include <flixel/input/FlxBaseKeyList.h>
#endif
#ifndef INCLUDED_flixel_input_FlxKeyManager
#include <flixel/input/FlxKeyManager.h>
#endif
#ifndef INCLUDED_flixel_input_IFlxInputManager
#include <flixel/input/IFlxInputManager.h>
#endif
#ifndef INCLUDED_flixel_input_keyboard_FlxKeyList
#include <flixel/input/keyboard/FlxKeyList.h>
#endif
#ifndef INCLUDED_flixel_input_keyboard_FlxKeyboard
#include <flixel/input/keyboard/FlxKeyboard.h>
#endif
#ifndef INCLUDED_flixel_math_FlxPoint
#include <flixel/math/FlxPoint.h>
#endif
#ifndef INCLUDED_flixel_tweens_FlxEase
#include <flixel/tweens/FlxEase.h>
#endif
#ifndef INCLUDED_flixel_tweens_FlxTween
#include <flixel/tweens/FlxTween.h>
#endif
#ifndef INCLUDED_flixel_tweens_misc_VarTween
#include <flixel/tweens/misc/VarTween.h>
#endif
#ifndef INCLUDED_flixel_util_FlxAxes
#include <flixel/util/FlxAxes.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxPooled
#include <flixel/util/IFlxPooled.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_da8fa810d721fd76_43_new,"Cutscene3","new",0xf4ccb5bb,"Cutscene3.new","Cutscene3.hx",43,0xc9fe9a15)
HX_DEFINE_STACK_FRAME(_hx_pos_da8fa810d721fd76_15_new,"Cutscene3","new",0xf4ccb5bb,"Cutscene3.new","Cutscene3.hx",15,0xc9fe9a15)
HX_LOCAL_STACK_FRAME(_hx_pos_da8fa810d721fd76_49_updateGraphic,"Cutscene3","updateGraphic",0x3eef04ba,"Cutscene3.updateGraphic","Cutscene3.hx",49,0xc9fe9a15)
HX_LOCAL_STACK_FRAME(_hx_pos_da8fa810d721fd76_59_doShit,"Cutscene3","doShit",0xdce11a70,"Cutscene3.doShit","Cutscene3.hx",59,0xc9fe9a15)
HX_LOCAL_STACK_FRAME(_hx_pos_da8fa810d721fd76_63_doShit,"Cutscene3","doShit",0xdce11a70,"Cutscene3.doShit","Cutscene3.hx",63,0xc9fe9a15)
HX_LOCAL_STACK_FRAME(_hx_pos_da8fa810d721fd76_74_doShit,"Cutscene3","doShit",0xdce11a70,"Cutscene3.doShit","Cutscene3.hx",74,0xc9fe9a15)
HX_LOCAL_STACK_FRAME(_hx_pos_da8fa810d721fd76_69_doShit,"Cutscene3","doShit",0xdce11a70,"Cutscene3.doShit","Cutscene3.hx",69,0xc9fe9a15)
HX_LOCAL_STACK_FRAME(_hx_pos_da8fa810d721fd76_97_doShit,"Cutscene3","doShit",0xdce11a70,"Cutscene3.doShit","Cutscene3.hx",97,0xc9fe9a15)
HX_LOCAL_STACK_FRAME(_hx_pos_da8fa810d721fd76_92_doShit,"Cutscene3","doShit",0xdce11a70,"Cutscene3.doShit","Cutscene3.hx",92,0xc9fe9a15)
HX_LOCAL_STACK_FRAME(_hx_pos_da8fa810d721fd76_110_update,"Cutscene3","update",0x47902b8e,"Cutscene3.update","Cutscene3.hx",110,0xc9fe9a15)
HX_LOCAL_STACK_FRAME(_hx_pos_da8fa810d721fd76_117_update,"Cutscene3","update",0x47902b8e,"Cutscene3.update","Cutscene3.hx",117,0xc9fe9a15)
HX_LOCAL_STACK_FRAME(_hx_pos_da8fa810d721fd76_128_parseDialogue,"Cutscene3","parseDialogue",0xec3ca986,"Cutscene3.parseDialogue","Cutscene3.hx",128,0xc9fe9a15)

void Cutscene3_obj::__construct(::Array< ::String > data){
            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_0, ::Cutscene3,_gthis) HXARGC(1)
            		void _hx_run( ::flixel::tweens::FlxTween twn){
            			HX_GC_STACKFRAME(&_hx_pos_da8fa810d721fd76_43_new)
HXLINE(  43)			_gthis->doShit();
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_GC_STACKFRAME(&_hx_pos_da8fa810d721fd76_15_new)
HXLINE(  24)		this->shitPattern =  ::EReg_obj::__alloc( HX_CTX ,HX_("\\[.+\\]",fd,bd,d4,4c),HX_("i",69,00,00,00));
HXLINE(  23)		this->canSkip = false;
HXLINE(  21)		this->cutsceneSec = 0;
HXLINE(  17)		this->dialogueSections = ::Array_obj< ::Dynamic>::__new(0);
HXLINE(  16)		this->data = ::Array_obj< ::String >::__new(0);
HXLINE(  25)		 ::Cutscene3 _gthis = ::hx::ObjectPtr<OBJ_>(this);
HXLINE(  26)		super::__construct(null(),null(),null());
HXLINE(  28)		this->data = data;
HXLINE(  29)		this->parseDialogue();
HXLINE(  30)		this->cutsceneImage =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,null(),null(),null());
HXLINE(  31)		this->updateGraphic();
HXLINE(  33)		 ::flixel::FlxSprite _hx_tmp =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,0,0,null());
HXDLIN(  33)		int _hx_tmp1 = ::Std_obj::_hx_int(( (Float)((::flixel::FlxG_obj::width * 3)) ));
HXDLIN(  33)		this->fader = _hx_tmp->makeGraphic(_hx_tmp1,::Std_obj::_hx_int(( (Float)((::flixel::FlxG_obj::height * 3)) )),-16777216,null(),null());
HXLINE(  34)		this->fader->scrollFactor->set(null(),null());
HXLINE(  35)		this->fader->set_alpha(( (Float)(1) ));
HXLINE(  36)		 ::flixel::FlxSprite _hx_tmp2 = this->fader;
HXDLIN(  36)		Float _hx_tmp3 = this->fader->get_width();
HXDLIN(  36)		_hx_tmp2->setGraphicSize(::Std_obj::_hx_int((_hx_tmp3 * (1 + (( (Float)(1) ) - ::flixel::FlxG_obj::camera->zoom)))),null());
HXLINE(  37)		this->add(this->fader);
HXLINE(  39)		::flixel::tweens::FlxTween_obj::tween(this->fader, ::Dynamic(::hx::Anon_obj::Create(1)
            			->setFixed(0,HX_("alpha",5e,a7,96,21),0)),((Float).5), ::Dynamic(::hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("ease",ee,8b,0c,43),::flixel::tweens::FlxEase_obj::quadInOut_dyn())
            			->setFixed(1,HX_("onComplete",f8,d4,7e,5d), ::Dynamic(new _hx_Closure_0(_gthis)))));
            	}

Dynamic Cutscene3_obj::__CreateEmpty() { return new Cutscene3_obj; }

void *Cutscene3_obj::_hx_vtable = 0;

Dynamic Cutscene3_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< Cutscene3_obj > _hx_result = new Cutscene3_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool Cutscene3_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x33063189) {
		if (inClassId<=(int)0x2c01639b) {
			if (inClassId<=(int)0x288ce903) {
				return inClassId==(int)0x00000001 || inClassId==(int)0x288ce903;
			} else {
				return inClassId==(int)0x2c01639b;
			}
		} else {
			return inClassId==(int)0x33063189;
		}
	} else {
		return inClassId==(int)0x7ccf8994 || inClassId==(int)0x7dab0655;
	}
}

void Cutscene3_obj::updateGraphic(){
            	HX_STACKFRAME(&_hx_pos_da8fa810d721fd76_49_updateGraphic)
HXLINE(  50)		 ::flixel::FlxSprite _hx_tmp = this->cutsceneImage;
HXDLIN(  50)		::String library = null();
HXDLIN(  50)		_hx_tmp->loadGraphic(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + (HX_("cutscenes/ending/c",61,e2,96,4f) + ::Std_obj::string((this->cutsceneSec + 1)))) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library),null(),null(),null(),null(),null());
HXLINE(  51)		this->cutsceneImage->updateHitbox();
HXLINE(  53)		this->cutsceneImage->setGraphicSize(1280,720);
HXLINE(  54)		this->cutsceneImage->updateHitbox();
HXLINE(  55)		this->cutsceneImage->screenCenter(null());
HXLINE(  56)		this->add(this->cutsceneImage);
            	}


HX_DEFINE_DYNAMIC_FUNC0(Cutscene3_obj,updateGraphic,(void))

void Cutscene3_obj::doShit(){
            	HX_GC_STACKFRAME(&_hx_pos_da8fa810d721fd76_59_doShit)
HXDLIN(  59)		 ::Cutscene3 _gthis = ::hx::ObjectPtr<OBJ_>(this);
HXLINE(  60)		if ((this->dialogueSections->__get(this->cutsceneSec).StaticCast< ::Array< ::String > >()->length > 0)) {
            			HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_2, ::Cutscene3,_gthis) HXARGC(0)
            			void _hx_run(){
            				HX_GC_STACKFRAME(&_hx_pos_da8fa810d721fd76_63_doShit)
HXLINE(  64)				_gthis->cutsceneSec++;
HXLINE(  65)				if ((_gthis->cutsceneSec == _gthis->dialogueSections->length)) {
            					HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_1, ::Cutscene3,_gthis) HXARGC(1)
            					void _hx_run( ::flixel::tweens::FlxTween twn){
            						HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_0, ::Cutscene3,_gthis) HXARGC(1)
            						void _hx_run( ::flixel::tweens::FlxTween twn){
            							HX_GC_STACKFRAME(&_hx_pos_da8fa810d721fd76_74_doShit)
HXLINE(  75)							_gthis->remove(_gthis->fader,null()).StaticCast<  ::flixel::FlxSprite >();
HXLINE(  76)							_gthis->finishThing();
            						}
            						HX_END_LOCAL_FUNC1((void))

            						HX_GC_STACKFRAME(&_hx_pos_da8fa810d721fd76_69_doShit)
HXLINE(  70)						_gthis->remove(_gthis->cutsceneImage,null()).StaticCast<  ::flixel::FlxSprite >();
HXLINE(  71)						::flixel::tweens::FlxTween_obj::tween(_gthis->fader, ::Dynamic(::hx::Anon_obj::Create(1)
            							->setFixed(0,HX_("alpha",5e,a7,96,21),0)),((Float).5), ::Dynamic(::hx::Anon_obj::Create(2)
            							->setFixed(0,HX_("ease",ee,8b,0c,43),::flixel::tweens::FlxEase_obj::quadInOut_dyn())
            							->setFixed(1,HX_("onComplete",f8,d4,7e,5d), ::Dynamic(new _hx_Closure_0(_gthis)))));
            					}
            					HX_END_LOCAL_FUNC1((void))

HXLINE(  66)					::flixel::tweens::FlxTween_obj::tween(_gthis->fader, ::Dynamic(::hx::Anon_obj::Create(1)
            						->setFixed(0,HX_("alpha",5e,a7,96,21),1)),((Float).5), ::Dynamic(::hx::Anon_obj::Create(2)
            						->setFixed(0,HX_("ease",ee,8b,0c,43),::flixel::tweens::FlxEase_obj::quadInOut_dyn())
            						->setFixed(1,HX_("onComplete",f8,d4,7e,5d), ::Dynamic(new _hx_Closure_1(_gthis)))));
            				}
            				else {
HXLINE(  82)					_gthis->canSkip = true;
            				}
            			}
            			HX_END_LOCAL_FUNC0((void))

HXLINE(  61)			this->canSkip = false;
HXLINE(  62)			this->dialogueBox =  ::DialogueBox_obj::__alloc( HX_CTX ,false,this->dialogueSections->__get(this->cutsceneSec).StaticCast< ::Array< ::String > >());
HXLINE(  63)			this->dialogueBox->finishThing =  ::Dynamic(new _hx_Closure_2(_gthis));
HXLINE(  85)			this->add(this->dialogueBox);
            		}
            		else {
HXLINE(  87)			this->cutsceneSec++;
HXLINE(  88)			if ((this->cutsceneSec == this->dialogueSections->length)) {
            				HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_4, ::Cutscene3,_gthis) HXARGC(1)
            				void _hx_run( ::flixel::tweens::FlxTween twn){
            					HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_3, ::Cutscene3,_gthis) HXARGC(1)
            					void _hx_run( ::flixel::tweens::FlxTween twn){
            						HX_GC_STACKFRAME(&_hx_pos_da8fa810d721fd76_97_doShit)
HXLINE(  98)						_gthis->remove(_gthis->fader,null()).StaticCast<  ::flixel::FlxSprite >();
HXLINE(  99)						_gthis->finishThing();
            					}
            					HX_END_LOCAL_FUNC1((void))

            					HX_GC_STACKFRAME(&_hx_pos_da8fa810d721fd76_92_doShit)
HXLINE(  93)					_gthis->remove(_gthis->cutsceneImage,null()).StaticCast<  ::flixel::FlxSprite >();
HXLINE(  94)					::flixel::tweens::FlxTween_obj::tween(_gthis->fader, ::Dynamic(::hx::Anon_obj::Create(1)
            						->setFixed(0,HX_("alpha",5e,a7,96,21),1)),((Float).5), ::Dynamic(::hx::Anon_obj::Create(2)
            						->setFixed(0,HX_("ease",ee,8b,0c,43),::flixel::tweens::FlxEase_obj::quadInOut_dyn())
            						->setFixed(1,HX_("onComplete",f8,d4,7e,5d), ::Dynamic(new _hx_Closure_3(_gthis)))));
            				}
            				HX_END_LOCAL_FUNC1((void))

HXLINE(  89)				::flixel::tweens::FlxTween_obj::tween(this->fader, ::Dynamic(::hx::Anon_obj::Create(1)
            					->setFixed(0,HX_("alpha",5e,a7,96,21),0)),((Float).5), ::Dynamic(::hx::Anon_obj::Create(2)
            					->setFixed(0,HX_("ease",ee,8b,0c,43),::flixel::tweens::FlxEase_obj::quadInOut_dyn())
            					->setFixed(1,HX_("onComplete",f8,d4,7e,5d), ::Dynamic(new _hx_Closure_4(_gthis)))));
            			}
            			else {
HXLINE( 105)				this->canSkip = true;
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(Cutscene3_obj,doShit,(void))

void Cutscene3_obj::update(Float elapsed){
            	HX_STACKFRAME(&_hx_pos_da8fa810d721fd76_110_update)
HXDLIN( 110)		 ::Cutscene3 _gthis = ::hx::ObjectPtr<OBJ_>(this);
HXLINE( 111)		this->super::update(elapsed);
HXLINE( 112)		bool _hx_tmp;
HXDLIN( 112)		if (this->canSkip) {
HXLINE( 112)			_hx_tmp = ( ( ::flixel::input::FlxBaseKeyList)(::flixel::FlxG_obj::keys->justPressed) )->get_ANY();
            		}
            		else {
HXLINE( 112)			_hx_tmp = false;
            		}
HXDLIN( 112)		if (_hx_tmp) {
            			HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_0, ::Cutscene3,_gthis) HXARGC(1)
            			void _hx_run( ::flixel::tweens::FlxTween twn){
            				HX_STACKFRAME(&_hx_pos_da8fa810d721fd76_117_update)
HXLINE( 118)				::flixel::tweens::FlxTween_obj::tween(_gthis->fader, ::Dynamic(::hx::Anon_obj::Create(1)
            					->setFixed(0,HX_("alpha",5e,a7,96,21),0)),((Float).5), ::Dynamic(::hx::Anon_obj::Create(1)
            					->setFixed(0,HX_("ease",ee,8b,0c,43),::flixel::tweens::FlxEase_obj::quadInOut_dyn())));
HXLINE( 119)				_gthis->updateGraphic();
HXLINE( 120)				_gthis->doShit();
            			}
            			HX_END_LOCAL_FUNC1((void))

HXLINE( 113)			this->canSkip = false;
HXLINE( 114)			::flixel::tweens::FlxTween_obj::tween(this->fader, ::Dynamic(::hx::Anon_obj::Create(1)
            				->setFixed(0,HX_("alpha",5e,a7,96,21),1)),((Float).5), ::Dynamic(::hx::Anon_obj::Create(2)
            				->setFixed(0,HX_("ease",ee,8b,0c,43),::flixel::tweens::FlxEase_obj::quadInOut_dyn())
            				->setFixed(1,HX_("onComplete",f8,d4,7e,5d), ::Dynamic(new _hx_Closure_0(_gthis)))));
            		}
            	}


void Cutscene3_obj::parseDialogue(){
            	HX_STACKFRAME(&_hx_pos_da8fa810d721fd76_128_parseDialogue)
HXLINE( 129)		int currentSection = -1;
HXLINE( 130)		{
HXLINE( 130)			int _g = 0;
HXDLIN( 130)			::Array< ::String > _g1 = this->data;
HXDLIN( 130)			while((_g < _g1->length)){
HXLINE( 130)				::String i = _g1->__get(_g);
HXDLIN( 130)				_g = (_g + 1);
HXLINE( 131)				if (this->shitPattern->match(i)) {
HXLINE( 132)					currentSection = (currentSection + 1);
HXLINE( 133)					this->dialogueSections[currentSection] = ::Array_obj< ::String >::__new(0);
            				}
            				else {
HXLINE( 135)					this->dialogueSections->__get(currentSection).StaticCast< ::Array< ::String > >()->push(i);
            				}
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(Cutscene3_obj,parseDialogue,(void))


::hx::ObjectPtr< Cutscene3_obj > Cutscene3_obj::__new(::Array< ::String > data) {
	::hx::ObjectPtr< Cutscene3_obj > __this = new Cutscene3_obj();
	__this->__construct(data);
	return __this;
}

::hx::ObjectPtr< Cutscene3_obj > Cutscene3_obj::__alloc(::hx::Ctx *_hx_ctx,::Array< ::String > data) {
	Cutscene3_obj *__this = (Cutscene3_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(Cutscene3_obj), true, "Cutscene3"));
	*(void **)__this = Cutscene3_obj::_hx_vtable;
	__this->__construct(data);
	return __this;
}

Cutscene3_obj::Cutscene3_obj()
{
}

void Cutscene3_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Cutscene3);
	HX_MARK_MEMBER_NAME(data,"data");
	HX_MARK_MEMBER_NAME(dialogueSections,"dialogueSections");
	HX_MARK_MEMBER_NAME(finishThing,"finishThing");
	HX_MARK_MEMBER_NAME(dialogueBox,"dialogueBox");
	HX_MARK_MEMBER_NAME(cutsceneImage,"cutsceneImage");
	HX_MARK_MEMBER_NAME(cutsceneSec,"cutsceneSec");
	HX_MARK_MEMBER_NAME(fader,"fader");
	HX_MARK_MEMBER_NAME(canSkip,"canSkip");
	HX_MARK_MEMBER_NAME(shitPattern,"shitPattern");
	 ::flixel::group::FlxTypedSpriteGroup_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void Cutscene3_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(data,"data");
	HX_VISIT_MEMBER_NAME(dialogueSections,"dialogueSections");
	HX_VISIT_MEMBER_NAME(finishThing,"finishThing");
	HX_VISIT_MEMBER_NAME(dialogueBox,"dialogueBox");
	HX_VISIT_MEMBER_NAME(cutsceneImage,"cutsceneImage");
	HX_VISIT_MEMBER_NAME(cutsceneSec,"cutsceneSec");
	HX_VISIT_MEMBER_NAME(fader,"fader");
	HX_VISIT_MEMBER_NAME(canSkip,"canSkip");
	HX_VISIT_MEMBER_NAME(shitPattern,"shitPattern");
	 ::flixel::group::FlxTypedSpriteGroup_obj::__Visit(HX_VISIT_ARG);
}

::hx::Val Cutscene3_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"data") ) { return ::hx::Val( data ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"fader") ) { return ::hx::Val( fader ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"doShit") ) { return ::hx::Val( doShit_dyn() ); }
		if (HX_FIELD_EQ(inName,"update") ) { return ::hx::Val( update_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"canSkip") ) { return ::hx::Val( canSkip ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"finishThing") ) { return ::hx::Val( finishThing ); }
		if (HX_FIELD_EQ(inName,"dialogueBox") ) { return ::hx::Val( dialogueBox ); }
		if (HX_FIELD_EQ(inName,"cutsceneSec") ) { return ::hx::Val( cutsceneSec ); }
		if (HX_FIELD_EQ(inName,"shitPattern") ) { return ::hx::Val( shitPattern ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"cutsceneImage") ) { return ::hx::Val( cutsceneImage ); }
		if (HX_FIELD_EQ(inName,"updateGraphic") ) { return ::hx::Val( updateGraphic_dyn() ); }
		if (HX_FIELD_EQ(inName,"parseDialogue") ) { return ::hx::Val( parseDialogue_dyn() ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"dialogueSections") ) { return ::hx::Val( dialogueSections ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val Cutscene3_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"data") ) { data=inValue.Cast< ::Array< ::String > >(); return inValue; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"fader") ) { fader=inValue.Cast<  ::flixel::FlxSprite >(); return inValue; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"canSkip") ) { canSkip=inValue.Cast< bool >(); return inValue; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"finishThing") ) { finishThing=inValue.Cast<  ::Dynamic >(); return inValue; }
		if (HX_FIELD_EQ(inName,"dialogueBox") ) { dialogueBox=inValue.Cast<  ::DialogueBox >(); return inValue; }
		if (HX_FIELD_EQ(inName,"cutsceneSec") ) { cutsceneSec=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"shitPattern") ) { shitPattern=inValue.Cast<  ::EReg >(); return inValue; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"cutsceneImage") ) { cutsceneImage=inValue.Cast<  ::flixel::FlxSprite >(); return inValue; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"dialogueSections") ) { dialogueSections=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void Cutscene3_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("data",2a,56,63,42));
	outFields->push(HX_("dialogueSections",26,e4,89,2a));
	outFields->push(HX_("dialogueBox",d3,87,95,1b));
	outFields->push(HX_("cutsceneImage",71,be,47,81));
	outFields->push(HX_("cutsceneSec",27,29,07,0f));
	outFields->push(HX_("fader",76,17,49,fb));
	outFields->push(HX_("canSkip",af,fe,ac,6a));
	outFields->push(HX_("shitPattern",70,d6,d2,50));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo Cutscene3_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /* ::Array< ::String > */ ,(int)offsetof(Cutscene3_obj,data),HX_("data",2a,56,63,42)},
	{::hx::fsObject /* ::Array< ::Dynamic> */ ,(int)offsetof(Cutscene3_obj,dialogueSections),HX_("dialogueSections",26,e4,89,2a)},
	{::hx::fsObject /*  ::Dynamic */ ,(int)offsetof(Cutscene3_obj,finishThing),HX_("finishThing",9b,aa,8e,36)},
	{::hx::fsObject /*  ::DialogueBox */ ,(int)offsetof(Cutscene3_obj,dialogueBox),HX_("dialogueBox",d3,87,95,1b)},
	{::hx::fsObject /*  ::flixel::FlxSprite */ ,(int)offsetof(Cutscene3_obj,cutsceneImage),HX_("cutsceneImage",71,be,47,81)},
	{::hx::fsInt,(int)offsetof(Cutscene3_obj,cutsceneSec),HX_("cutsceneSec",27,29,07,0f)},
	{::hx::fsObject /*  ::flixel::FlxSprite */ ,(int)offsetof(Cutscene3_obj,fader),HX_("fader",76,17,49,fb)},
	{::hx::fsBool,(int)offsetof(Cutscene3_obj,canSkip),HX_("canSkip",af,fe,ac,6a)},
	{::hx::fsObject /*  ::EReg */ ,(int)offsetof(Cutscene3_obj,shitPattern),HX_("shitPattern",70,d6,d2,50)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *Cutscene3_obj_sStaticStorageInfo = 0;
#endif

static ::String Cutscene3_obj_sMemberFields[] = {
	HX_("data",2a,56,63,42),
	HX_("dialogueSections",26,e4,89,2a),
	HX_("finishThing",9b,aa,8e,36),
	HX_("dialogueBox",d3,87,95,1b),
	HX_("cutsceneImage",71,be,47,81),
	HX_("cutsceneSec",27,29,07,0f),
	HX_("fader",76,17,49,fb),
	HX_("canSkip",af,fe,ac,6a),
	HX_("shitPattern",70,d6,d2,50),
	HX_("updateGraphic",9f,bf,75,3f),
	HX_("doShit",eb,74,56,1c),
	HX_("update",09,86,05,87),
	HX_("parseDialogue",6b,64,c3,ec),
	::String(null()) };

::hx::Class Cutscene3_obj::__mClass;

void Cutscene3_obj::__register()
{
	Cutscene3_obj _hx_dummy;
	Cutscene3_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("Cutscene3",49,bc,c2,6f);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(Cutscene3_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< Cutscene3_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Cutscene3_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Cutscene3_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

