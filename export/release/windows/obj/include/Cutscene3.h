// Generated by Haxe 4.1.5
#ifndef INCLUDED_Cutscene3
#define INCLUDED_Cutscene3

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_flixel_group_FlxTypedSpriteGroup
#include <flixel/group/FlxTypedSpriteGroup.h>
#endif
HX_DECLARE_CLASS0(Cutscene3)
HX_DECLARE_CLASS0(DialogueBox)
HX_DECLARE_CLASS0(EReg)
HX_DECLARE_CLASS1(flixel,FlxBasic)
HX_DECLARE_CLASS1(flixel,FlxObject)
HX_DECLARE_CLASS1(flixel,FlxSprite)
HX_DECLARE_CLASS2(flixel,group,FlxTypedSpriteGroup)
HX_DECLARE_CLASS2(flixel,util,IFlxDestroyable)



class HXCPP_CLASS_ATTRIBUTES Cutscene3_obj : public  ::flixel::group::FlxTypedSpriteGroup_obj
{
	public:
		typedef  ::flixel::group::FlxTypedSpriteGroup_obj super;
		typedef Cutscene3_obj OBJ_;
		Cutscene3_obj();

	public:
		enum { _hx_ClassId = 0x33063189 };

		void __construct(::Array< ::String > data);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="Cutscene3")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"Cutscene3"); }
		static ::hx::ObjectPtr< Cutscene3_obj > __new(::Array< ::String > data);
		static ::hx::ObjectPtr< Cutscene3_obj > __alloc(::hx::Ctx *_hx_ctx,::Array< ::String > data);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~Cutscene3_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Cutscene3",49,bc,c2,6f); }

		::Array< ::String > data;
		::Array< ::Dynamic> dialogueSections;
		 ::Dynamic finishThing;
		Dynamic finishThing_dyn() { return finishThing;}
		 ::DialogueBox dialogueBox;
		 ::flixel::FlxSprite cutsceneImage;
		int cutsceneSec;
		 ::flixel::FlxSprite fader;
		bool canSkip;
		 ::EReg shitPattern;
		void updateGraphic();
		::Dynamic updateGraphic_dyn();

		void doShit();
		::Dynamic doShit_dyn();

		void update(Float elapsed);

		void parseDialogue();
		::Dynamic parseDialogue_dyn();

};


#endif /* INCLUDED_Cutscene3 */ 
